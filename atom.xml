<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>wizzup</title>
    <link href="http://wizzup.github.io/atom.xml" rel="self" />
    <link href="http://wizzup.github.io" />
    <id>http://wizzup.github.io/atom.xml</id>
    <author>
        <name>wizzup</name>
        <email>wizzup@gmail.com</email>
    </author>
    <updated>2017-06-01T00:00:00Z</updated>
    <entry>
    <title>Nix, Python and Vim</title>
    <link href="http://wizzup.github.io/posts/2017-06-01-new.html" />
    <id>http://wizzup.github.io/posts/2017-06-01-new.html</id>
    <published>2017-06-01T00:00:00Z</published>
    <updated>2017-06-01T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on June  1, 2017
    
</div>

<p>This is how I setup nix-shell environments for python and vim.</p>
<pre><code>{ pkgs ? import &lt;nixpkgs&gt; {} }:

with pkgs;

let py3s = pkgs.python3.buildEnv.override  {
  extraLibs = with pkgs.python3Packages; [ jedi pyyaml ];
};
in stdenv.mkDerivation {
  name = &quot;python3-shell&quot;;
  buildInputs = [ py3s ];

  shellHook = &#39;&#39;
    export PS1=&quot;\[\033[1;32m\][nix-py3:\w]\n$ \[\033[0m\]&quot;
  &#39;&#39;;
}</code></pre>
]]></summary>
</entry>
<entry>
    <title>Nix, Haskell and Vim</title>
    <link href="http://wizzup.github.io/posts/2017-05-31-new.html" />
    <id>http://wizzup.github.io/posts/2017-05-31-new.html</id>
    <published>2017-05-31T00:00:00Z</published>
    <updated>2017-05-31T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on May 31, 2017
    
</div>

<p>This is how I setup nix-shell environments for hakyll and vim.</p>
<p>This is shelll.nix</p>
<div class="sourceCode"><pre class="sourceCode nix"><code class="sourceCode bash"><span class="co"># shell.nix for nix-shell</span>
<span class="co">#</span>
<span class="kw">{</span> <span class="ex">pkgs</span> ? import <span class="op">&lt;</span>nixpkgs<span class="op">&gt;</span> <span class="dt">{}</span> <span class="kw">}</span>:

<span class="bu">let</span>
  <span class="ex">hs</span> = pkgs.haskellPackages.ghcWithHoogle (self: with self<span class="kw">;</span><span class="bu"> [</span>
          hakyll
        ]);
in
pkgs.stdenv.mkDerivation {
  name <span class="ot">=</span> <span class="st">&quot;haskell-shell&quot;</span>;
  buildInputs <span class="ot">=</span> with pkgs.haskellPackages; [ hs cabal-install ghc-mod hlint hspec  ];

  shellHook <span class="ot">=</span> <span class="st">&#39;&#39;</span>
    export PS1=<span class="st">&quot;\[\033[1;32m\][ns-hs:\w]\n$ \[\033[0m\]&quot;</span>
    eval <span class="st">&quot;</span><span class="va">$(</span><span class="fu">egrep</span> ^export <span class="st">&quot;</span><span class="va">$(</span><span class="bu">type</span> -p ghc<span class="va">)</span><span class="st">&quot;</span><span class="va">)</span><span class="st">&quot;</span>
  <span class="st">&#39;&#39;</span>;
}</code></pre></div>
<p>I use cabal to do the build</p>
<pre class="sourceCode shell"><code>$ cabal build</code></pre>
]]></summary>
</entry>

</feed>
